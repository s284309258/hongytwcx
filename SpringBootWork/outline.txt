SpringWork技术整合

技术指南

spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来理解，就是spring boot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架。

Maven多模块项目,适用于一些比较大的项目，通过合理的模块拆分，实现代码的复用，便于维护和管理。尤其是一些开源框架，也是采用多模块的方式，提供插件集成，用户可以根据需要配置指定的模块。

这里，我们可以使用maven多模块功能组织项目，将不同的组件使用Springboot统一管理。

概览

SpringBootWork项目整合了Springboot项目中常用的一些关键性技术，使用组件化的方式自动装配，可以快速生成基础项目框架。

源码为初始源代码，部分组件提供了易用性整合，提高了可读性和易用性，部分仍需继续改造。

项目简介：
	SpringBootWork：SpringBoot组件化项目的父模块,主要用来管理maven配置的。
	Web：SpringBoot组件化项目的主要启动项目，通过配置文件中指定profile来加载子模块的配置。
	WebFlux：SpringBoot响应式编程WebFlux的启动项目，目前只有一个组件，暂无其他支持。
	SpringDataRest：spring-data-rest的启动项目，配合spring-data-jpa实现快速rest服务，5分钟搭建一个包含crud的rest服务。
	Mybatis：SpringBoot使用Mybatis进行数据库访问，包含注解版+XML版写法。
	SpringDataJpa：SpringBoot使用spring-data-jpa进行数据库访问.
	Mail：SpringBoot整合的Mail，这里封装了常用的邮件类型，包含附件、内嵌、文字、html、表格等类型的发送。
	Security：SpringBoot整合SpringSecurity做form表单的访问控制。
	Token: SpringBoot整合SpringSecurity,使用token做访问控制，默认使用jwt token，可以随意更改token策略。
	Redis：Spring-data-redis的使用。
	Ehcache：SpringBoot结合本地缓存Ehcache的使用。
	Caffeine：SpringBoot结合本地缓存Caffeine的使用。
	Netty：配合Spring注解的netty使用。
	Schedule：Spring内置定时任务的使用。
	Quartz： Springboot结合Quartz做定时任务。
	Thymeleaf：模板引擎Thymeleaf的使用。
	Ldap：Spring-data-ldap的使用。
	ActiveMQ：SpringBoot整合的jms-ActiveMQ消息队列使用。
	RabbitMQ： SpringBoot整合的AMQP-RabbitMQ消息队列使用。
	Oauth2: SpringBoot单机版Oauth2的使用。包含了Oauth2的三个角色。
	Swagger： SpringBoot整合Swagger文档中心。
	Elasticsearch： Spring-data-elasticsearch的使用。
	Mongodb： SpringBoot整合mongodb的两种写法。
	Wallet： 基于SpringBoot的钱包,包含网络、支付、转账、收支平衡等基本功能。
	JpaLock: 基于Spring-data-jpa实现的悲观锁和乐观锁。
	MybatisLock: 基于Mybatis实现的悲观锁和乐观锁。
	WebSocket: Spring的websocket整合。
	
	

